package org.openape.server.auth;

import java.util.List;

import org.openape.api.user.User;
import org.openape.server.api.group.Group;

import spark.Request;
import spark.Response;

/**
 * This class is the authentication service for the group management. It checks if the logged in user is allowed to edit
 * a group or not. Therefore it checks, whether the logged in user is an OpenAPE admin or the group admin.
 * 
 * @author Tobias Ableitner
 *
 */
public class GroupAuthService extends AuthService {
	
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// attributes
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// constructors
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// getters and setters
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

	


	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// abstract methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

	
	

	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// override methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// public methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

	public void allowOpenAPEAndGroupAdmin(Request request, Response response, Group group) throws UnauthorizedException{
		User user = this.getAuthenticatedUser(request, response);
		List<String> roles = user.getRoles();
		// TODO is role admin correct?
		if(!group.isUserGroupAdmin(user.getId()) && !roles.contains("admin")){
			throw new UnauthorizedException("You are not allowed to perform this operation");
		}
	}



	
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// protected methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// private methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// inner classes
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

}
