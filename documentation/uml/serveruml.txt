@startuml
class org.openape.server.Main{
+<u>main(args: String[])
}
class org.openape.server.MongoConfig {
+<u>getString(key: String): String
}
class org.openape.web.Init{
+init()
}
class org.openape.server.database.mongoDB.DatabaseConnection <<Singleton>> {
+deleteData(type: MongoCollectionTypes, id: String): Boolean
+getData(type: MongoCollectionTypes, id: String): DatabaseObject
+storeData(type: MongoCollectionTypes, data: DatabaseObject): String
+updateData(type: MongoCollectionTypes, data: DatabaseObject, id: String): Boolean
}
class org.openape.server.database.resources.ListingManager {
+<u>getResourcesFromListing(listing: Listing): List<File>
}
class org.openape.server.database.resources.ResourceList <<Singleton>> {
+addResource(resource: Part): String
+deleteResource(fileName: String): Boolean
+getResourceNameList(): List<String>
+getResoureFile(fileName: String): File
}
class org.openape.server.requestHandler.TypeRequestHandler {
+createType(type: Object): String
+deleteTypeById(id: String): Boolean
+getTypeById(id: String): Type
+updateTypeById(id: String, type: Object): Boolean
}
note left: exists for each context type,\nresource descriptions and listings.
class org.openape.server.requestHandler.ResourceRequestHandler {
+createResource(resource: Part): String
+deleteResourceById(id: String): Boolean
+getListingById(id: String): Listing
+getResourceById(String id): File
+getResourceByListing(listing: Listing): List<File>
}
class org.openape.server.rest.TypeRESTInterface {
+<u>setupTypeRESTInterface(requestHandler: TypeRequestHandler)
}
note left: exists for each context type,\nresource descriptions and listings.
class org.openape.server.rest.ResourceManagerRESTInterface {
+<u>setupResourceManagerRESTInterface()
}
class org.openape.server.rest.ResourceRESTInterface {
+<u>setupResourceRESTInterface(requestHandler: ResourceRequestHandler)
}
class org.openape.server.rest.SuperRestInterface{
+<u>HTTP_STATUS_BAD_REQUEST
+<u>HTTP_STATUS_CREATED
+<u>HTTP_STATUS_INTERNAL_SERVER_ERROR
+<u>HTTP_STATUS_NO_CONTENT
+<u>HTTP_STATUS_NOT_FOUND
+<u>HTTP_STATUS_OK
#<u>extractObjectFromRequest(req: Request, objectType: Class<T>): Object
}
enum org.openape.server.database.mongoDB.MongoCollectionTypes {
ENVIRONMENTCONTEXT
EQUIPMENTCONTEXT
LISTING
RESOURCEDESCRIPTION
TASKCONTEXT
USERCONTEXT
+<u>getTypeFromCollectionName(collectionName: String): MongoCollectionTypes
+getDocumentType(): Class<? extends DatabaseObject>
+toString(): String
}
org.openape.server.database.mongoDB.DatabaseConnection --> org.openape.server.database.mongoDB.MongoCollectionTypes :uses

org.openape.server.Main --> org.openape.server.rest.SuperRestInterface :uses
org.openape.web.Init --> org.openape.server.rest.SuperRestInterface :uses

org.openape.server.database.mongoDB.DatabaseConnection --> org.openape.server.MongoConfig :uses

org.openape.server.requestHandler.TypeRequestHandler --> org.openape.server.database.mongoDB.DatabaseConnection :uses
org.openape.server.requestHandler.ResourceRequestHandler --> org.openape.server.database.mongoDB.DatabaseConnection :uses
org.openape.server.requestHandler.ResourceRequestHandler --> org.openape.server.database.resources.ResourceList :uses

org.openape.server.requestHandler.TypeRequestHandler "1" --* "1" org.openape.server.rest.TypeRESTInterface
org.openape.server.rest.TypeRESTInterface --|> org.openape.server.rest.SuperRestInterface
org.openape.server.rest.ResourceManagerRESTInterface --|> org.openape.server.rest.SuperRestInterface
org.openape.server.requestHandler.ResourceRequestHandler "1" --* "1" org.openape.server.rest.ResourceRESTInterface
org.openape.server.rest.ResourceRESTInterface --|> org.openape.server.rest.SuperRestInterface

org.openape.server.rest.SuperRestInterface --> org.openape.server.rest.TypeRESTInterface :uses
org.openape.server.rest.SuperRestInterface --> org.openape.server.rest.ResourceRESTInterface :uses
org.openape.server.rest.SuperRestInterface --> org.openape.server.rest.ResourceManagerRESTInterface :uses

org.openape.server.requestHandler.ResourceRequestHandler --> org.openape.server.database.resources.ListingManager :uses
@enduml
